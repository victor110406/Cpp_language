#include<iostream>
//선행처리: c언어에서는 헤더파일 확장자를 사용하지만, C++에서는 사용하지 않는다.

using namespace std;

//C++은 기존 C언어에서 절자 지향적 언어의 특징뿐아니라, 클래스를 사용하는 객제 지향적 언어인 동시에 템플릿으로 대변되는 프로그래밍 방식이다.
//C++은 객체 지향 프로그래밍 언어이다
//C++은 일반화 프로그래밍 언어이다.

//프로그래밍이란 목적에 맞는 알고리즘으로부터 프로그래밍 언어를 사용하여 구체적인 프로그램을 작성하는 과정이다.

//C++ 실행 순서

//1.소스 파일작성
//2.선행처리
//3.컴파일
//4.링크
//5.실행 파일 생성

//네임스스페이스(namespace)
//C++프로그램을 작성할 때 발생하는 이름에 대한 충돌을 방지해 주는 방법
//클래스,함수,변수 등은 std라는 이름 공간에 저장되어 있다.

//주석(commment)
//주석이랑 코드에 대한 이해를 돕는 설명을 적거나 디버깅을 위해 작성하는 일종의 메모

//한 줄 주석

/* 여러 줄
	주석
*/

//C++ 표준 입출력
//C++ 모든 것은 객체로 표현되므로, 입출력을 담당하는 수단을 모두 객체로 표현한다.
//C++에서는 cout 객체로 출력 작업을, cin객체로 입력 작업을 수행


int main() {
//C++ 프로그램은 반드시 하나의 main()함수를 가지고 있어야 한다.

	//명령문: 프로그램의 동작을 명시하고, 이러한 동작을 컴퓨터에 알려주는데 사용되는 문장

	std::cout << "Hello World\n";
	//cout 객체
	//cout 객체는 다양한 데이터를 출력하는데 사용되는 C++ 출력 스트림 객체이다.

	cout << "Hello Hong won san";
	//삽입 연산자(<<) 오른쪽에 위치한 출력할 데이터를 출력 스트림에 삽입

	int a;
	std::cin >> a;
	//cin 객체
	//cin 객체는 다양한 데이터를 입력받는 데 사용되는 입력 스트림을 나타내는 객체이다.
	//추출 연산자(>>)를 통해 사용자가 입력한 데이터를 입려 스트림에서 추출하여, 오른쪽 변수에 저장
	

	return 0;
	//반환문: 함수의 종료를 의미하며, 함수를 호출한 곳으로 결괏값을 반환
}